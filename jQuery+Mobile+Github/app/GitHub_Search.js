/*
 * JS for GitHub_Search generated by Appery.io
 */

Apperyio.getProjectGUID = function() {
    return '5247bf3f-6695-4ea4-aa91-9b30dc5211e8';
};

function navigateTo(outcome, useAjax) {
    Apperyio.navigateTo(outcome, useAjax);
}

function adjustContentHeight() {
    Apperyio.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Apperyio.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Apperyio.setDetailContent(pageUrl);
}

Apperyio.AppPages = [{
    "name": "GitHub_Git",
    "location": "#GitHub_Git"
}, {
    "name": "GitHub_File",
    "location": "#GitHub_File"
}, {
    "name": "startScreen",
    "location": "#startScreen"
}, {
    "name": "GitHub_Img",
    "location": "#GitHub_Img"
}, {
    "name": "GitHub_Repo",
    "location": "#GitHub_Repo"
}, {
    "name": "GitHub_Search",
    "location": "#GitHub_Search"
}, {
    "name": "GitHub_Gist",
    "location": "#GitHub_Gist"
}];

function GitHub_Search_js() {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'searchNavBar': 'GitHub_Search_searchNavBar',
        'usersTab': 'GitHub_Search_usersTab',
        'reposTab': 'GitHub_Search_reposTab',
        'gistsTab': 'GitHub_Search_gistsTab',
        'logoutButton': 'GitHub_Search_logoutButton',
        'myGitButton': 'GitHub_Search_myGitButton',
        'authorizeButton': 'GitHub_Search_authorizeButton',
        'usersGrid': 'GitHub_Search_usersGrid',
        'mobilegridcell_34': 'GitHub_Search_mobilegridcell_34',
        'userSearch': 'GitHub_Search_userSearch',
        'mobilegridcell_38': 'GitHub_Search_mobilegridcell_38',
        'usersRes': 'GitHub_Search_usersRes',
        'mobilegridcell_42': 'GitHub_Search_mobilegridcell_42',
        'avaImg': 'GitHub_Search_avaImg',
        'mobilegridcell_43': 'GitHub_Search_mobilegridcell_43',
        'login': 'GitHub_Search_login',
        'repoGrid': 'GitHub_Search_repoGrid',
        'mobilegridcell_51': 'GitHub_Search_mobilegridcell_51',
        'repoSearch': 'GitHub_Search_repoSearch',
        'mobilegridcell_53': 'GitHub_Search_mobilegridcell_53',
        'searchRepoGrid': 'GitHub_Search_searchRepoGrid',
        'mobilegridcell_57': 'GitHub_Search_mobilegridcell_57',
        'mobilelabel1_84': 'GitHub_Search_mobilelabel1_84',
        'mobilegridcell_82': 'GitHub_Search_mobilegridcell_82',
        'repoTitle': 'GitHub_Search_repoTitle',
        'repoUserLogin': 'GitHub_Search_repoUserLogin',
        'repoDescription': 'GitHub_Search_repoDescription',
        'gistsGrid': 'GitHub_Search_gistsGrid',
        'mobilegridcell_64': 'GitHub_Search_mobilegridcell_64',
        'searchUserGists': 'GitHub_Search_searchUserGists',
        'mobilegridcell_66': 'GitHub_Search_mobilegridcell_66',
        'searchResGistsGrid': 'GitHub_Search_searchResGistsGrid',
        'mobilegridcell_70': 'GitHub_Search_mobilegridcell_70',
        'searchGistsAva': 'GitHub_Search_searchGistsAva',
        'gistId': 'GitHub_Search_gistId',
        'mobilegridcell_81': 'GitHub_Search_mobilegridcell_81',
        'searchGistDescr': 'GitHub_Search_searchGistDescr',
        'gistUserLogin': 'GitHub_Search_gistUserLogin'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    /*
     * Nonvisual components
     */

    Apperyio.mappings = Apperyio.mappings || {};

    Apperyio.mappings["GitHub_Search_getUsersServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {

            "to_name": "getUsersServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": []
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_getUsersServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "getUsersServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Search",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][i]",
                "target": "$['usersRes']"

            },

            {

                "source": "$['body'][i]['avatar_url']",
                "target": "$['usersRes']['avaImg:image']"

            },

            {

                "source": "$['body'][i]['login']",
                "target": "$['usersRes']['login:text']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_searchUsersServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "GitHub_Search",
            "from_type": "UI",

            "to_name": "searchUsersServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$['userSearch:text']",
                "target_transformation": function(value) {
                    return (value != "") ? value : "";
                },
                "target": "$['parameters']['keyword']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_searchUsersServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "searchUsersServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Search",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body']['users'][i]['gravatar_id']",
                "target_transformation": function(value, element) {
                    return "https://secure.gravatar.com/avatar/" + value + "?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"
                },
                "target": "$['usersRes']['avaImg:image']"

            },

            {

                "source": "$['body']['users'][i]",
                "target": "$['usersRes']"

            },

            {

                "source": "$['body']['users'][i]['login']",
                "target": "$['usersRes']['login:text']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_searchReposServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "GitHub_Search",
            "from_type": "UI",

            "to_name": "searchReposServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$['repoSearch:text']",
                "target_transformation": function(value) {
                    return (value != "") ? value : "";
                },
                "target": "$['parameters']['keyword']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_searchReposServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "searchReposServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Search",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body']['repositories'][i]['description']",
                "target": "$['searchRepoGrid']['repoDescription:text']"

            },

            {

                "source": "$['body']['repositories'][i]['username']",
                "target": "$['searchRepoGrid']['repoUserLogin:text']"

            },

            {

                "source": "$['body']['repositories'][i]['name']",
                "target": "$['searchRepoGrid']['repoTitle:text']"

            },

            {

                "source": "$['body']['repositories'][i]",
                "target": "$['searchRepoGrid']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_getReposServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {

            "to_name": "getReposServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": []
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_getReposServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "getReposServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Search",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][i]['owner']['login']",
                "target": "$['searchRepoGrid']['repoUserLogin:text']"

            },

            {

                "source": "$['body'][i]",
                "target": "$['searchRepoGrid']"

            },

            {

                "source": "$['body'][i]['description']",
                "target": "$['searchRepoGrid']['repoDescription:text']"

            },

            {

                "source": "$['body'][i]['name']",
                "target": "$['searchRepoGrid']['repoTitle:text']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_getPublicGistsServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getPublicGistsServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {
                    "params": "public"
                },
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_getPublicGistsServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "getPublicGistsServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Search",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][i]",
                "target": "$['searchResGistsGrid']"

            },

            {

                "source": "$['body'][i]['user']['avatar_url']",
                "target": "$['searchResGistsGrid']['searchGistsAva:image']"

            },

            {

                "source": "$['body'][i]['user']['login']",
                "target": "$['searchResGistsGrid']['gistUserLogin:text']"

            },

            {

                "source": "$['body'][i]['description']",
                "target_transformation": function(value, element) {
                    return (value == "") ? "No description" : value;
                },
                "target": "$['searchResGistsGrid']['searchGistDescr:text']"

            },

            {

                "source": "$['body'][i]['id']",
                "target": "$['searchResGistsGrid']['gistId:text']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_getAccessTokenServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {

            "to_name": "getAccessTokenServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {
                    "Accept": "application/json",
                    "Content-Type": "application/json"
                },
                "parameters": {},
                "body": {
                    "client_id": "{client_id}",
                    "client_secret": "{client_secret}"
                }
            },

            "mappings": []
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_getAccessTokenServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "getAccessTokenServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "access_token",
            "to_type": "LOCAL_STORAGE",

            "mappings": [

            {

                "source": "$['body']['access_token']",
                "target": "$"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_getUserGistsServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "GitHub_Search",
            "from_type": "UI",

            "to_name": "getUserGistsServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$['searchUserGists:text']",
                "target": "$['parameters']['user']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Search_getUserGistsServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Search",
        "directions": [

        {
            "from_name": "getUserGistsServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Search",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][i]['user']['login']",
                "target": "$['searchResGistsGrid']['gistUserLogin:text']"

            },

            {

                "source": "$['body'][i]['description']",
                "target_transformation": function(value, element) {
                    return (value == "") ? "No description" : value;
                },
                "target": "$['searchResGistsGrid']['searchGistDescr:text']"

            },

            {

                "source": "$['body'][i]",
                "target": "$['searchResGistsGrid']"

            },

            {

                "source": "$['body'][i]['id']",
                "target": "$['searchResGistsGrid']['gistId:text']"

            },

            {

                "source": "$['body'][i]['user']['avatar_url']",
                "target": "$['searchResGistsGrid']['searchGistsAva:image']"

            }

            ]
        }

        ]
    };

    Apperyio.datasources = Apperyio.datasources || {};

    window.getUsersServ = Apperyio.datasources.getUsersServ = new Apperyio.DataSource(GitHub_getUsers, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_getUsersServ_onbeforesend_mapping_0"]);
            $('.GitHub_Search_usersGrid_wrapper').show();
            $('.GitHub_Search_repoGrid_wrapper').hide();
            $('.GitHub_Search_gistsGrid_wrapper').hide();
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_getUsersServ_onsuccess_mapping_0"]);
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.searchUsersServ = Apperyio.datasources.searchUsersServ = new Apperyio.DataSource(GitHub_searchUsers, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_searchUsersServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_searchUsersServ_onsuccess_mapping_0"]);
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.searchReposServ = Apperyio.datasources.searchReposServ = new Apperyio.DataSource(GitHub_searchRepos, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_searchReposServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_searchReposServ_onsuccess_mapping_0"]);
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getReposServ = Apperyio.datasources.getReposServ = new Apperyio.DataSource(GitHub_getRepos, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_getReposServ_onbeforesend_mapping_0"]);
            $('.GitHub_Search_usersGrid_wrapper').hide();
            $('.GitHub_Search_repoGrid_wrapper').show();
            $('.GitHub_Search_gistsGrid_wrapper').hide();
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_getReposServ_onsuccess_mapping_0"]);
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getPublicGistsServ = Apperyio.datasources.getPublicGistsServ = new Apperyio.DataSource(GitHub_searchGists, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_getPublicGistsServ_onbeforesend_mapping_0"]);
            $('.GitHub_Search_usersGrid_wrapper').hide();
            $('.GitHub_Search_repoGrid_wrapper').hide();
            $('.GitHub_Search_gistsGrid_wrapper').show();
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_getPublicGistsServ_onsuccess_mapping_0"]);
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getAccessTokenServ = Apperyio.datasources.getAccessTokenServ = new Apperyio.DataSource(GitHub_getAccessToken, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_getAccessTokenServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_getAccessTokenServ_onsuccess_mapping_0"]);
            if (data.error) {
                Helpers.authorize();
            } else {
                Helpers.searchPageInit();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {
            Helpers.authorize();
        }
    });

    window.getUserGistsServ = Apperyio.datasources.getUserGistsServ = new Apperyio.DataSource(GitHub_getUserGists, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_getUserGistsServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Search_getUserGistsServ_onsuccess_mapping_0"]);
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    Apperyio.CurrentScreen = 'GitHub_Search';
    _.chain(Apperyio.mappings).filter(function(m) {
        return m.homeScreen === Apperyio.CurrentScreen;
    }).each(Apperyio.UIHandler.hideTemplateComponents);

    /*
     * Events and handlers
     */

    // On Load
    var GitHub_Search_onLoad = function() {
            GitHub_Search_elementsExtraJS();

            Helpers.initNavBar();

            GitHub_Search_deviceEvents();
            GitHub_Search_windowEvents();
            GitHub_Search_elementsEvents();
        };

    // screen window events


    function GitHub_Search_windowEvents() {

        $('#GitHub_Search').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#GitHub_Search').on({
            pageshow: function(event) {
                Helpers.searchPageShowHandler();
            },
            pagehide: function(event) {
                Helpers.searchPageHideHandler();
            },
        });

    };

    // device events


    function GitHub_Search_deviceEvents() {
        document.addEventListener("deviceready", function() {

        });
    };

    // screen elements extra js


    function GitHub_Search_elementsExtraJS() {
        // screen (GitHub_Search) extra code

    };

    // screen elements handler


    function GitHub_Search_elementsEvents() {
        $(document).on("click", "a :input,a a,a fieldset label", function(event) {
            event.stopPropagation();
        });

        $(document).off("click", '#GitHub_Search_searchHeader [name="usersTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".searchGrid").hide();
                    toggle('GitHub_Search_usersGrid', 'mob', 'true');
                    try {
                        getUsersServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Search_searchHeader [name="usersTab"]');
        $(document).off("click", '#GitHub_Search_searchHeader [name="reposTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".searchGrid").hide();
                    toggle('GitHub_Search_repoGrid', 'mob', 'true');
                    try {
                        getReposServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Search_searchHeader [name="reposTab"]');
        $(document).off("click", '#GitHub_Search_searchHeader [name="gistsTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".searchGrid").hide();
                    toggle('GitHub_Search_gistsGrid', 'mob', 'true');
                    try {
                        getPublicGistsServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Search_searchHeader [name="gistsTab"]');
        $(document).off("click", '#GitHub_Search_searchHeader [name="logoutButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    Helpers.logout();

                }
            },
        }, '#GitHub_Search_searchHeader [name="logoutButton"]');
        $(document).off("click", '#GitHub_Search_searchHeader [name="myGitButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    var access_token = localStorage.getItem("access_token");
                    if (access_token) {
                        Appery.navigateTo("GitHub_Git");
                    };

                }
            },
        }, '#GitHub_Search_searchHeader [name="myGitButton"]');

        $(document).off("click", '#GitHub_Search_mobilecontainer1 [name="authorizeButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    Helpers.authorize();

                }
            },
        }, '#GitHub_Search_mobilecontainer1 [name="authorizeButton"]');

        $(document).off("vclick", "#GitHub_Search_userSearch-cover-img").on({
            vclick: function(event) {
                if (!$(this).attr('disabled')) {
                    Helpers.searchFix("user", Appery("userSearch").val());
                }
            }
        }, "#GitHub_Search_userSearch-cover-img");

        $(document).off("vclick", "#GitHub_Search_repoSearch-cover-img").on({
            vclick: function(event) {
                if (!$(this).attr('disabled')) {
                    Helpers.searchFix("repo", Appery("repoSearch").val());
                }
            }
        }, "#GitHub_Search_repoSearch-cover-img");

        $(document).off("vclick", '#GitHub_Search_mobilecontainer1 [name="searchRepoGrid"]').on({
            vclick: function(event) {
                Helpers.folderStack.length = 0;
                localStorage.currentRepo = $.trim($(this).find('[name="repoTitle"]').text());
                localStorage.currentUserLogin = $.trim($(this).find('[name="repoUserLogin"]').text());
                Apperyio.navigateTo('GitHub_Repo', {
                    transition: 'slide',
                    reverse: false
                });
            },
        }, '#GitHub_Search_mobilecontainer1 [name="searchRepoGrid"]');

        $(document).off("vclick", "#GitHub_Search_searchUserGists-cover-img").on({
            vclick: function(event) {
                if (!$(this).attr('disabled')) {
                    Helpers.searchFix("gist", Appery("searchUserGists").val());
                }
            }
        }, "#GitHub_Search_searchUserGists-cover-img");

        $(document).off("vclick click", '#GitHub_Search_mobilecontainer1 [name="searchResGistsGrid"]').on({
            vclick: function(event) {
                Apperyio.navigateTo('GitHub_Gist', {
                    transition: 'slide',
                    reverse: false
                });
            },
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    localStorage.currentGistId = $.trim($(this).find('[name="gistId"]').text());

                }
            },
        }, '#GitHub_Search_mobilecontainer1 [name="searchResGistsGrid"]');

    };

    $(document).off("pagebeforeshow", "#GitHub_Search").on("pagebeforeshow", "#GitHub_Search", function(event, ui) {
        Apperyio.CurrentScreen = "GitHub_Search";
        _.chain(Apperyio.mappings).filter(function(m) {
            return m.homeScreen === Apperyio.CurrentScreen;
        }).each(Apperyio.UIHandler.hideTemplateComponents);
    });

    GitHub_Search_onLoad();
};

$(document).off("pagecreate", "#GitHub_Search").on("pagecreate", "#GitHub_Search", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    GitHub_Search_js();
});

function GitHub_Git_js() {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'userTabs': 'GitHub_Git_userTabs',
        'myReposTab': 'GitHub_Git_myReposTab',
        'myGistsTab': 'GitHub_Git_myGistsTab',
        'myFollowersTab': 'GitHub_Git_myFollowersTab',
        'myFollowingTab': 'GitHub_Git_myFollowingTab',
        'mobilebutton_64': 'GitHub_Git_mobilebutton_64',
        'myRepoResGrid': 'GitHub_Git_myRepoResGrid',
        'mobilegridcell_8': 'GitHub_Git_mobilegridcell_8',
        'mobilelabel1_63': 'GitHub_Git_mobilelabel1_63',
        'repoUserLogin': 'GitHub_Git_repoUserLogin',
        'mobilegridcell_9': 'GitHub_Git_mobilegridcell_9',
        'myRepoName': 'GitHub_Git_myRepoName',
        'myRepoDescr': 'GitHub_Git_myRepoDescr',
        'myRepoRes': 'GitHub_Git_myRepoRes',
        'mobilegridcell_26': 'GitHub_Git_mobilegridcell_26',
        'myRepoLang': 'GitHub_Git_myRepoLang',
        'mobilegridcell_27': 'GitHub_Git_mobilegridcell_27',
        'myRepoWatchers': 'GitHub_Git_myRepoWatchers',
        'mobilegridcell_30': 'GitHub_Git_mobilegridcell_30',
        'myRepoForks': 'GitHub_Git_myRepoForks',
        'myGistsGrid': 'GitHub_Git_myGistsGrid',
        'mobilegridcell_36': 'GitHub_Git_mobilegridcell_36',
        'myGistAva': 'GitHub_Git_myGistAva',
        'myGistId': 'GitHub_Git_myGistId',
        'mobilegridcell_37': 'GitHub_Git_mobilegridcell_37',
        'myGistName': 'GitHub_Git_myGistName',
        'myGistsAddInfoGrid': 'GitHub_Git_myGistsAddInfoGrid',
        'mobilegridcell_61': 'GitHub_Git_mobilegridcell_61',
        'myGistsLogin': 'GitHub_Git_myGistsLogin',
        'mobilegridcell_62': 'GitHub_Git_mobilegridcell_62',
        'myGistComments': 'GitHub_Git_myGistComments',
        'myGistsFilesGrid': 'GitHub_Git_myGistsFilesGrid',
        'mobilegridcell_45': 'GitHub_Git_mobilegridcell_45',
        'myGistFile': 'GitHub_Git_myGistFile',
        'mobilegridcell_46': 'GitHub_Git_mobilegridcell_46',
        'myGistLang': 'GitHub_Git_myGistLang',
        'mobilegridcell_49': 'GitHub_Git_mobilegridcell_49',
        'fileSize': 'GitHub_Git_fileSize',
        'myFollowGrid': 'GitHub_Git_myFollowGrid',
        'mobilegridcell_54': 'GitHub_Git_mobilegridcell_54',
        'followersAva': 'GitHub_Git_followersAva',
        'mobilegridcell_55': 'GitHub_Git_mobilegridcell_55',
        'followersLogin': 'GitHub_Git_followersLogin',
        'messageLabel': 'GitHub_Git_messageLabel'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    /*
     * Nonvisual components
     */

    Apperyio.mappings = Apperyio.mappings || {};

    Apperyio.mappings["GitHub_Git_getUserRepoServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserRepoServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user']"

            }

            ]
        },

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserRepoServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserRepoServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "getUserRepoServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Git",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][0]['name']",
                "target": "$['myRepoName:text']"

            },

            {

                "source": "$['body'][0]['language']",
                "target": "$['myRepoLang:text']"

            },

            {

                "source": "$['body'][0]['description']",
                "target": "$['myRepoDescr:text']"

            },

            {

                "source": "$['body'][0]['watchers_count']",
                "target_transformation": function(value, element) {
                    return "Watchers: " + value;
                },
                "target": "$['myRepoWatchers:text']"

            },

            {

                "source": "$['body'][0]['owner']['login']",
                "target": "$['repoUserLogin:text']"

            },

            {

                "source": "$['body'][0]['forks_count']",
                "target_transformation": function(value, element) {
                    return "Forks: " + value;
                },
                "target": "$['myRepoForks:text']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserGistServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserGistServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        },

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserGistServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserGistServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "getUserGistServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Git",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][0]['id']",
                "target": "$['myGistId:text']"

            },

            {

                "source": "$['body'][0]['user']['login']",
                "target": "$['myGistsLogin:text']"

            },

            {

                "source": "$['body'][0]['description']",
                "target": "$['myGistName:text']"

            },

            {

                "source": "$['body'][0]['comments']",
                "target_transformation": function(value, element) {
                    return "Comments: " + value
                },
                "target": "$['myGistComments:text']"

            },

            {

                "source": "$['body'][0]['user']['avatar_url']",
                "target": "$['myGistAva:image']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserFollowersServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserFollowersServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user']"

            }

            ]
        },

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserFollowersServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserFollowersServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "getUserFollowersServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Git",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][0]['avatar_url']",
                "target": "$['followersAva:image']"

            },

            {

                "source": "$['body'][0]['login']",
                "target": "$['followersLogin:text']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserFollowingServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserFollowingServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user']"

            }

            ]
        },

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserFollowingServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserFollowingServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "getUserFollowingServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Git",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][0]['login']",
                "target": "$['followersLogin:text']"

            },

            {

                "source": "$['body'][0]['avatar_url']",
                "target": "$['followersAva:image']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getCurrentUserServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getCurrentUserServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getCurrentUserServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "getCurrentUserServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "currentUserLogin",
            "to_type": "LOCAL_STORAGE",

            "mappings": [

            {

                "source": "$['body']['login']",
                "target": "$"

            }

            ]
        }

        ]
    };

    Apperyio.datasources = Apperyio.datasources || {};

    window.getUserRepoServ = Apperyio.datasources.getUserRepoServ = new Apperyio.DataSource(GitHub_getUserRepos, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserRepoServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserRepoServ_onsuccess_mapping_0"]);
            if (data.length === 0) {
                Appery("messageLabel").show();
                Appery("myRepoResGrid").parent().hide();
                Appery("messageLabel").text("The user doesn't have any repos");
            } else {
                Appery("myRepoResGrid").parent().show();
                Appery("messageLabel").hide();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getUserGistServ = Apperyio.datasources.getUserGistServ = new Apperyio.DataSource(GitHub_getUserGists, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserGistServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserGistServ_onsuccess_mapping_0"]);
            if (data.length === 0) {
                Appery("messageLabel").show();
                Appery("myGistsGrid").parent().hide();
                Appery("messageLabel").text("The user doesn't have any gists");
            } else {
                Appery("messageLabel").hide();
                Appery("myGistsGrid").parent().show();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getUserFollowersServ = Apperyio.datasources.getUserFollowersServ = new Apperyio.DataSource(GitHub_getUserFollowers, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserFollowersServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserFollowersServ_onsuccess_mapping_0"]);
            if (data.length === 0) {
                Appery("messageLabel").show();
                Appery("myFollowGrid").parent().hide();
                Appery("messageLabel").text("The user doesn't have any followers");
            } else {
                Appery("messageLabel").hide();
                Appery("myFollowGrid").parent().show();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getUserFollowingServ = Apperyio.datasources.getUserFollowingServ = new Apperyio.DataSource(GitHub_getUserFollowing, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserFollowingServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserFollowingServ_onsuccess_mapping_0"]);
            if (data.length === 0) {
                Appery("messageLabel").show();
                Appery("myFollowGrid").parent().hide();
                Appery("messageLabel").text("The user doesn't follow anybody");
            } else {
                Appery("messageLabel").hide();
                Appery("myFollowGrid").parent().show();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getCurrentUserServ = Apperyio.datasources.getCurrentUserServ = new Apperyio.DataSource(GitHub_getCurrentUser, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getCurrentUserServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getCurrentUserServ_onsuccess_mapping_0"]);
            Helpers.updateHeader(data.login);
            toggle('GitHub_Git_myRepoResGrid', 'mob', 'true');
            try {
                getUserRepoServ.execute({});
            } catch (e) {
                console.error(e);
                hideSpinner();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    Apperyio.CurrentScreen = 'GitHub_Git';
    _.chain(Apperyio.mappings).filter(function(m) {
        return m.homeScreen === Apperyio.CurrentScreen;
    }).each(Apperyio.UIHandler.hideTemplateComponents);

    /*
     * Events and handlers
     */

    // On Load
    var GitHub_Git_onLoad = function() {
            GitHub_Git_elementsExtraJS();

            Helpers.initNavBar();

            GitHub_Git_deviceEvents();
            GitHub_Git_windowEvents();
            GitHub_Git_elementsEvents();
        };

    // screen window events


    function GitHub_Git_windowEvents() {

        $('#GitHub_Git').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#GitHub_Git').on({
            pageshow: function(event) {
                try {
                    getCurrentUserServ.execute({});
                } catch (e) {
                    console.error(e);
                    hideSpinner();
                };
            },
        });

    };

    // device events


    function GitHub_Git_deviceEvents() {
        document.addEventListener("deviceready", function() {

        });
    };

    // screen elements extra js


    function GitHub_Git_elementsExtraJS() {
        // screen (GitHub_Git) extra code

    };

    // screen elements handler


    function GitHub_Git_elementsEvents() {
        $(document).on("click", "a :input,a a,a fieldset label", function(event) {
            event.stopPropagation();
        });

        $(document).off("click", '#GitHub_Git_userHeader [name="myReposTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".myGrid").hide();
                    toggle('GitHub_Git_myRepoResGrid', 'mob', 'true');
                    try {
                        getUserRepoServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Git_userHeader [name="myReposTab"]');
        $(document).off("click", '#GitHub_Git_userHeader [name="myGistsTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".myGrid").hide();
                    toggle('GitHub_Git_myGistsGrid', 'mob', 'true');
                    try {
                        getUserGistServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Git_userHeader [name="myGistsTab"]');
        $(document).off("click", '#GitHub_Git_userHeader [name="myFollowersTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".myGrid").hide();
                    toggle('GitHub_Git_myFollowGrid', 'mob', 'true');
                    try {
                        getUserFollowersServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Git_userHeader [name="myFollowersTab"]');
        $(document).off("click", '#GitHub_Git_userHeader [name="myFollowingTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".myGrid").hide();
                    toggle('GitHub_Git_myFollowGrid', 'mob', 'true');
                    try {
                        getUserFollowingServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Git_userHeader [name="myFollowingTab"]');
        $(document).off("click", '#GitHub_Git_userHeader [name="mobilebutton_64"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    history.back();

                }
            },
        }, '#GitHub_Git_userHeader [name="mobilebutton_64"]');

        $(document).off("vclick", '#GitHub_Git_mobilecontainer1 [name="myRepoResGrid"]').on({
            vclick: function(event) {
                try {
                    $a.storage["currentRepo"].update("$", $a.c15r($a.UIHandler.resolveGeneratedComponent('myRepoName', this), 'get', 'text'))
                } catch (e) {
                    console.error(e)
                };
                try {
                    $a.storage["currentUserLogin"].update("$", $a.c15r($a.UIHandler.resolveGeneratedComponent('repoUserLogin', this), 'get', 'text'))
                } catch (e) {
                    console.error(e)
                };
                Helpers.folderStack.length = 0;
            },
        }, '#GitHub_Git_mobilecontainer1 [name="myRepoResGrid"]');

        $(document).off("vclick", '#GitHub_Git_mobilecontainer1 [name="myGistsGrid"]').on({
            vclick: function(event) {
                try {
                    $a.storage["currentGistId"].update("$", $a.c15r($a.UIHandler.resolveGeneratedComponent('myGistId', this), 'get', 'text'))
                } catch (e) {
                    console.error(e)
                };
            },
        }, '#GitHub_Git_mobilecontainer1 [name="myGistsGrid"]');

        $(document).off("vclick", '#GitHub_Git_mobilecontainer1 [name="myFollowGrid"]').on({
            vclick: function(event) {
                try {
                    $a.storage["currentUserLogin"].update("$", $a.c15r($a.UIHandler.resolveGeneratedComponent('followersLogin', this), 'get', 'text'))
                } catch (e) {
                    console.error(e)
                };
                Appery("welcomeTabs").find("a").removeClass('ui-btn-active');
                Appery("myReposTab").addClass('ui-btn-active');
                Helpers.updateHeader($(this).find("[name=followersLogin]").text());
                $(".myGrid").hide();
                toggle('GitHub_Git_myRepoResGrid', 'mob', 'true');
                try {
                    getUserRepoServ.execute({});
                } catch (e) {
                    console.error(e);
                    hideSpinner();
                };
            },
        }, '#GitHub_Git_mobilecontainer1 [name="myFollowGrid"]');

    };

    $(document).off("pagebeforeshow", "#GitHub_Git").on("pagebeforeshow", "#GitHub_Git", function(event, ui) {
        Apperyio.CurrentScreen = "GitHub_Git";
        _.chain(Apperyio.mappings).filter(function(m) {
            return m.homeScreen === Apperyio.CurrentScreen;
        }).each(Apperyio.UIHandler.hideTemplateComponents);
    });

    GitHub_Git_onLoad();
};

$(document).off("pagecreate", "#GitHub_Git").on("pagecreate", "#GitHub_Git", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    GitHub_Git_js();
});

function GitHub_File_js() {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'filePanel': 'GitHub_File_filePanel'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    /*
     * Nonvisual components
     */

    Apperyio.mappings = Apperyio.mappings || {};

    Apperyio.mappings["GitHub_File_getBlobServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_File",
        "directions": [

        {
            "from_name": "currentRepo",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getBlobServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['repo_id']"

            }

            ]
        },

        {
            "from_name": "currentSHA",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getBlobServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['sha']"

            }

            ]
        },

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getBlobServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user_login']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_File_getBlobServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_File",
        "directions": []
    };

    Apperyio.datasources = Apperyio.datasources || {};

    window.getBlobServ = Apperyio.datasources.getBlobServ = new Apperyio.DataSource(GitHub_getBlob, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_File_getBlobServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_File_getBlobServ_onsuccess_mapping_0"]);
            Appery('filePanel').html(Helpers.getFileContent(data.content));
            Appery('filePanel').find('pre code').each(function(i, e) {
                hljs.highlightBlock(e)
            });
            Appery('filePanel').scrollTop(0);
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    Apperyio.CurrentScreen = 'GitHub_File';
    _.chain(Apperyio.mappings).filter(function(m) {
        return m.homeScreen === Apperyio.CurrentScreen;
    }).each(Apperyio.UIHandler.hideTemplateComponents);

    /*
     * Events and handlers
     */

    // On Load
    var GitHub_File_onLoad = function() {
            GitHub_File_elementsExtraJS();

            GitHub_File_deviceEvents();
            GitHub_File_windowEvents();
            GitHub_File_elementsEvents();
        };

    // screen window events


    function GitHub_File_windowEvents() {

        $('#GitHub_File').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#GitHub_File').on({
            pageshow: function(event) {
                Appery("fileHeader").text(localStorage.getItem("currentFileName"));
                Helpers.resizeTextArea();
                $(window).bind("resize", Helpers.resizeTextArea);
                try {
                    getBlobServ.execute({});
                } catch (e) {
                    console.error(e);
                    hideSpinner();
                };
            },
            pagehide: function(event) {
                $(window).unbind("resize", Helpers.resizeTextArea);
            },
        });

    };

    // device events


    function GitHub_File_deviceEvents() {
        document.addEventListener("deviceready", function() {

        });
    };

    // screen elements extra js


    function GitHub_File_elementsExtraJS() {
        // screen (GitHub_File) extra code

    };

    // screen elements handler


    function GitHub_File_elementsEvents() {
        $(document).on("click", "a :input,a a,a fieldset label", function(event) {
            event.stopPropagation();
        });

    };

    $(document).off("pagebeforeshow", "#GitHub_File").on("pagebeforeshow", "#GitHub_File", function(event, ui) {
        Apperyio.CurrentScreen = "GitHub_File";
        _.chain(Apperyio.mappings).filter(function(m) {
            return m.homeScreen === Apperyio.CurrentScreen;
        }).each(Apperyio.UIHandler.hideTemplateComponents);
    });

    GitHub_File_onLoad();
};

$(document).off("pagecreate", "#GitHub_File").on("pagecreate", "#GitHub_File", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    GitHub_File_js();
});

function startScreen_js() {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {

    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    /*
     * Nonvisual components
     */

    Apperyio.mappings = Apperyio.mappings || {};

    Apperyio.datasources = Apperyio.datasources || {};

    Apperyio.CurrentScreen = 'startScreen';
    _.chain(Apperyio.mappings).filter(function(m) {
        return m.homeScreen === Apperyio.CurrentScreen;
    }).each(Apperyio.UIHandler.hideTemplateComponents);

    /*
     * Events and handlers
     */

    // On Load
    var startScreen_onLoad = function() {
            startScreen_elementsExtraJS();

            startScreen_deviceEvents();
            startScreen_windowEvents();
            startScreen_elementsEvents();
        };

    // screen window events


    function startScreen_windowEvents() {

        $('#startScreen').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });

    };

    // device events


    function startScreen_deviceEvents() {
        document.addEventListener("deviceready", function() {

        });
    };

    // screen elements extra js


    function startScreen_elementsExtraJS() {
        // screen (startScreen) extra code

    };

    // screen elements handler


    function startScreen_elementsEvents() {
        $(document).on("click", "a :input,a a,a fieldset label", function(event) {
            event.stopPropagation();
        });

    };

    $(document).off("pagebeforeshow", "#startScreen").on("pagebeforeshow", "#startScreen", function(event, ui) {
        Apperyio.CurrentScreen = "startScreen";
        _.chain(Apperyio.mappings).filter(function(m) {
            return m.homeScreen === Apperyio.CurrentScreen;
        }).each(Apperyio.UIHandler.hideTemplateComponents);
    });

    startScreen_onLoad();
};

$(document).off("pagecreate", "#startScreen").on("pagecreate", "#startScreen", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    startScreen_js();
});

function GitHub_Img_js() {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'imgFile': 'GitHub_Img_imgFile'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    /*
     * Nonvisual components
     */

    Apperyio.mappings = Apperyio.mappings || {};

    Apperyio.mappings["GitHub_Img_getImgServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Img",
        "directions": [

        {

            "to_name": "getImgServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": []
        }

        ]
    };

    Apperyio.mappings["GitHub_Img_getImgServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Img",
        "directions": [

        {
            "from_name": "getImgServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Img",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body']['content']",
                "target_transformation": function(value, element) {
                    return "data:image/jpg;base64," + Helpers.removeHiddenChars(value);
                },
                "target": "$['imgFile:image']"

            }

            ]
        }

        ]
    };

    Apperyio.datasources = Apperyio.datasources || {};

    window.getImgServ = Apperyio.datasources.getImgServ = new Apperyio.DataSource(GitHub_getBlob, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Img_getImgServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Img_getImgServ_onsuccess_mapping_0"]);
            toggle('GitHub_Img_imgFile', 'mob', 'true');
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    Apperyio.CurrentScreen = 'GitHub_Img';
    _.chain(Apperyio.mappings).filter(function(m) {
        return m.homeScreen === Apperyio.CurrentScreen;
    }).each(Apperyio.UIHandler.hideTemplateComponents);

    /*
     * Events and handlers
     */

    // On Load
    var GitHub_Img_onLoad = function() {
            GitHub_Img_elementsExtraJS();

            GitHub_Img_deviceEvents();
            GitHub_Img_windowEvents();
            GitHub_Img_elementsEvents();
        };

    // screen window events


    function GitHub_Img_windowEvents() {

        $('#GitHub_Img').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#GitHub_Img').on({
            pageshow: function(event) {
                Appery("imgHeader").text(localStorage.getItem("currentFileName"));
                try {
                    getImgServ.execute({});
                } catch (e) {
                    console.error(e);
                    hideSpinner();
                };
            },
        });

    };

    // device events


    function GitHub_Img_deviceEvents() {
        document.addEventListener("deviceready", function() {

        });
    };

    // screen elements extra js


    function GitHub_Img_elementsExtraJS() {
        // screen (GitHub_Img) extra code

    };

    // screen elements handler


    function GitHub_Img_elementsEvents() {
        $(document).on("click", "a :input,a a,a fieldset label", function(event) {
            event.stopPropagation();
        });

    };

    $(document).off("pagebeforeshow", "#GitHub_Img").on("pagebeforeshow", "#GitHub_Img", function(event, ui) {
        Apperyio.CurrentScreen = "GitHub_Img";
        _.chain(Apperyio.mappings).filter(function(m) {
            return m.homeScreen === Apperyio.CurrentScreen;
        }).each(Apperyio.UIHandler.hideTemplateComponents);
    });

    GitHub_Img_onLoad();
};

$(document).off("pagecreate", "#GitHub_Img").on("pagecreate", "#GitHub_Img", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    GitHub_Img_js();
});

function GitHub_Repo_js() {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'repoName': 'GitHub_Repo_repoName',
        'upToPrevTree': 'GitHub_Repo_upToPrevTree',
        'mobilegridcell_27': 'GitHub_Repo_mobilegridcell_27',
        'mobilelabel1_33': 'GitHub_Repo_mobilelabel1_33',
        'mobilegridcell_31': 'GitHub_Repo_mobilegridcell_31',
        'mobilelabel1_34': 'GitHub_Repo_mobilelabel1_34',
        'repoTreeGrid': 'GitHub_Repo_repoTreeGrid',
        'mobilegridcell_20': 'GitHub_Repo_mobilegridcell_20',
        'treeType': 'GitHub_Repo_treeType',
        'mobilegridcell_21': 'GitHub_Repo_mobilegridcell_21',
        'pathLabel': 'GitHub_Repo_pathLabel',
        'mobilegridcell_24': 'GitHub_Repo_mobilegridcell_24',
        'mobilegridcell_22': 'GitHub_Repo_mobilegridcell_22',
        'mobilegridcell_23': 'GitHub_Repo_mobilegridcell_23',
        'shaLabel': 'GitHub_Repo_shaLabel',
        'mobilegridcell_25': 'GitHub_Repo_mobilegridcell_25'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    /*
     * Nonvisual components
     */

    Apperyio.mappings = Apperyio.mappings || {};

    Apperyio.mappings["GitHub_Repo_getCommitsServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Repo",
        "directions": [

        {
            "from_name": "currentRepo",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getCommitsServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['repo_id']"

            }

            ]
        },

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getCommitsServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user_login']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Repo_getCommitsServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Repo",
        "directions": [

        {
            "from_name": "getCommitsServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Repo",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][i]['sha']",
                "target": "$['repoTreeGrid']['shaLabel:text']"

            },

            {

                "source": "$['body'][i]['url']",
                "target": "$['repoTreeGrid']['pathLabel:text']"

            },

            {

                "source": "$['body'][i]",
                "target": "$['repoTreeGrid']"

            }

            ]
        },

        {
            "from_name": "getCommitsServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "currentSHA",
            "to_type": "LOCAL_STORAGE",

            "mappings": [

            {

                "source": "$['body'][0]['sha']",
                "target": "$"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Repo_getRepoTreeServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Repo",
        "directions": [

        {
            "from_name": "currentRepo",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getRepoTreeServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['repo_id']"

            }

            ]
        },

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getRepoTreeServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user_login']"

            }

            ]
        },

        {
            "from_name": "currentSHA",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getRepoTreeServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['sha']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Repo_getRepoTreeServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Repo",
        "directions": [

        {
            "from_name": "getRepoTreeServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Repo",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body']['tree'][i]['type']",
                "target_transformation": function(value, element) {
                    switch (value) {
                    case "blob":
                        return "";
                        break;
                    case "tree":
                        return "";
                        break;
                    default:
                        return "";
                    }
                },
                "target": "$['repoTreeGrid']['treeType:text']"

            },

            {

                "source": "$['body']['tree'][i]['path']",
                "target": "$['repoTreeGrid']['pathLabel:text']"

            },

            {

                "source": "$['body']['tree'][i]",
                "target_transformation": function(value, element) {
                    element.attr("type", value.type);
                    if (value.type == "tree") {
                        var tables = $("table[type=tree]");
                        if (tables.length == 1) {
                            element.prependTo(element.parent());
                        } else {
                            element.insertAfter(tables[tables.length - 2]);
                        }
                    }
                },
                "target": "$['repoTreeGrid']"

            },

            {

                "source": "$['body']['tree'][i]['sha']",
                "target": "$['repoTreeGrid']['shaLabel:text']"

            }

            ]
        }

        ]
    };

    Apperyio.datasources = Apperyio.datasources || {};

    window.getCommitsServ = Apperyio.datasources.getCommitsServ = new Apperyio.DataSource(GitHub_getCommits, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Repo_getCommitsServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Repo_getCommitsServ_onsuccess_mapping_0"]);
            try {
                getRepoTreeServ.execute({});
            } catch (e) {
                console.error(e);
                hideSpinner();
            };
            Helpers.folderStack.length = 0;
            Helpers.folderStack.push(data[0].sha);
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getRepoTreeServ = Apperyio.datasources.getRepoTreeServ = new Apperyio.DataSource(GitHub_getRepoTree, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Repo_getRepoTreeServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Repo_getRepoTreeServ_onsuccess_mapping_0"]);
            if (Helpers.folderStack.length == 1) {
                Appery("upToPrevTree").hide();
            } else {
                Appery("upToPrevTree").show();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    Apperyio.CurrentScreen = 'GitHub_Repo';
    _.chain(Apperyio.mappings).filter(function(m) {
        return m.homeScreen === Apperyio.CurrentScreen;
    }).each(Apperyio.UIHandler.hideTemplateComponents);

    /*
     * Events and handlers
     */

    // On Load
    var GitHub_Repo_onLoad = function() {
            GitHub_Repo_elementsExtraJS();

            GitHub_Repo_deviceEvents();
            GitHub_Repo_windowEvents();
            GitHub_Repo_elementsEvents();
        };

    // screen window events


    function GitHub_Repo_windowEvents() {

        $('#GitHub_Repo').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#GitHub_Repo').on({
            pageshow: function(event) {
                if (Helpers.folderStack.length === 0) {
                    getCommitsServ.execute({});
                };
            },
        });

    };

    // device events


    function GitHub_Repo_deviceEvents() {
        document.addEventListener("deviceready", function() {

        });
    };

    // screen elements extra js


    function GitHub_Repo_elementsExtraJS() {
        // screen (GitHub_Repo) extra code

    };

    // screen elements handler


    function GitHub_Repo_elementsEvents() {
        $(document).on("click", "a :input,a a,a fieldset label", function(event) {
            event.stopPropagation();
        });

        $(document).off("click", '#GitHub_Repo_mobilecontainer1 [name="upToPrevTree"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    Helpers.toUpperFolder();

                }
            },
        }, '#GitHub_Repo_mobilecontainer1 [name="upToPrevTree"]');

        $(document).off("vclick", '#GitHub_Repo_mobilecontainer1 [name="repoTreeGrid"]').on({
            vclick: function(event) {
                Helpers.openRepoItem(this);
            },
        }, '#GitHub_Repo_mobilecontainer1 [name="repoTreeGrid"]');

    };

    $(document).off("pagebeforeshow", "#GitHub_Repo").on("pagebeforeshow", "#GitHub_Repo", function(event, ui) {
        Apperyio.CurrentScreen = "GitHub_Repo";
        _.chain(Apperyio.mappings).filter(function(m) {
            return m.homeScreen === Apperyio.CurrentScreen;
        }).each(Apperyio.UIHandler.hideTemplateComponents);
    });

    GitHub_Repo_onLoad();
};

$(document).off("pagecreate", "#GitHub_Repo").on("pagecreate", "#GitHub_Repo", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    GitHub_Repo_js();
});

function GitHub_Gist_js() {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'gistDescription': 'GitHub_Gist_gistDescription',
        'gistPanel': 'GitHub_Gist_gistPanel',
        'gistCommentGrid': 'GitHub_Gist_gistCommentGrid',
        'mobilegridcell_13': 'GitHub_Gist_mobilegridcell_13',
        'gistCommentAva': 'GitHub_Gist_gistCommentAva',
        'mobilegridcell_14': 'GitHub_Gist_mobilegridcell_14',
        'commentUserLogin': 'GitHub_Gist_commentUserLogin',
        'commentContent': 'GitHub_Gist_commentContent'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    /*
     * Nonvisual components
     */

    Apperyio.mappings = Apperyio.mappings || {};

    Apperyio.mappings["GitHub_Gist_getGistServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Gist",
        "directions": [

        {
            "from_name": "currentGistId",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getGistServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['id']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Gist_getGistServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Gist",
        "directions": []
    };

    Apperyio.mappings["GitHub_Gist_getGistCommentsServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Gist",
        "directions": [

        {
            "from_name": "currentGistId",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getGistCommentsServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['gist_id']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Gist_getGistCommentsServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Gist",
        "directions": [

        {
            "from_name": "getGistCommentsServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Gist",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][i]",
                "target": "$['gistCommentGrid']"

            },

            {

                "source": "$['body'][i]['user']['login']",
                "target": "$['gistCommentGrid']['commentUserLogin:text']"

            },

            {

                "source": "$['body'][i]['body']",
                "target": "$['gistCommentGrid']['commentContent:text']"

            },

            {

                "source": "$['body'][i]['user']['avatar_url']",
                "target": "$['gistCommentGrid']['gistCommentAva:image']"

            }

            ]
        }

        ]
    };

    Apperyio.datasources = Apperyio.datasources || {};

    window.getGistServ = Apperyio.datasources.getGistServ = new Apperyio.DataSource(GitHub_getGist, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Gist_getGistServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {
            try {
                getGistCommentsServ.execute({});
            } catch (e) {
                console.error(e);
                hideSpinner();
            };

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Gist_getGistServ_onsuccess_mapping_0"]);
            Appery('gistPanel').html(Helpers.fillGist(data.files));
            Appery('gistDescription').text(data.description);
            Appery('gistPanel').find('pre code').each(function(i, e) {
                hljs.highlightBlock(e)
            });
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getGistCommentsServ = Apperyio.datasources.getGistCommentsServ = new Apperyio.DataSource(GitHub_getGistComments, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Gist_getGistCommentsServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Gist_getGistCommentsServ_onsuccess_mapping_0"]);
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    Apperyio.CurrentScreen = 'GitHub_Gist';
    _.chain(Apperyio.mappings).filter(function(m) {
        return m.homeScreen === Apperyio.CurrentScreen;
    }).each(Apperyio.UIHandler.hideTemplateComponents);

    /*
     * Events and handlers
     */

    // On Load
    var GitHub_Gist_onLoad = function() {
            GitHub_Gist_elementsExtraJS();

            GitHub_Gist_deviceEvents();
            GitHub_Gist_windowEvents();
            GitHub_Gist_elementsEvents();
        };

    // screen window events


    function GitHub_Gist_windowEvents() {

        $('#GitHub_Gist').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#GitHub_Gist').on({
            pageshow: function(event) {
                try {
                    getGistServ.execute({});
                } catch (e) {
                    console.error(e);
                    hideSpinner();
                };
            },
        });

    };

    // device events


    function GitHub_Gist_deviceEvents() {
        document.addEventListener("deviceready", function() {

        });
    };

    // screen elements extra js


    function GitHub_Gist_elementsExtraJS() {
        // screen (GitHub_Gist) extra code

    };

    // screen elements handler


    function GitHub_Gist_elementsEvents() {
        $(document).on("click", "a :input,a a,a fieldset label", function(event) {
            event.stopPropagation();
        });

    };

    $(document).off("pagebeforeshow", "#GitHub_Gist").on("pagebeforeshow", "#GitHub_Gist", function(event, ui) {
        Apperyio.CurrentScreen = "GitHub_Gist";
        _.chain(Apperyio.mappings).filter(function(m) {
            return m.homeScreen === Apperyio.CurrentScreen;
        }).each(Apperyio.UIHandler.hideTemplateComponents);
    });

    GitHub_Gist_onLoad();
};

$(document).off("pagecreate", "#GitHub_Gist").on("pagecreate", "#GitHub_Gist", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    GitHub_Gist_js();
});